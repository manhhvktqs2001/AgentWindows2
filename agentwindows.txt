# EDR AGENT WINDOWS - THIẾT KẾ HOÀN CHỈNH

## 🎯 TỔNG QUAN HỆ THỐNG

### Mục tiêu chính
- **Thu thập dữ liệu real-time** từ Windows endpoint
- **Phân tích và phát hiện mối đe dọa** bằng YARA rules từ GitHub
- **Gửi alerts ngay lập tức** về server khi phát hiện malware
- **Quản lý cách ly file** và remediation tự động
- **Hoạt động như Windows Service** với khả năng tự phục hồi

---

## 🏗️ KIẾN TRÚC TỔNG THỂ

```
┌─────────────────────────────────────────────────────────────┐
│                    EDR AGENT WINDOWS                        │
├─────────────────────────────────────────────────────────────┤
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐  │
│  │   CONFIG    │  │   LOGGER    │  │   SERVICE MANAGER   │  │
│  │  MANAGER    │  │   SYSTEM    │  │                     │  │
│  └─────────────┘  └─────────────┘  └─────────────────────┘  │
├─────────────────────────────────────────────────────────────┤
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐  │
│  │    AGENT    │  │   SERVER    │  │      YARA           │  │
│  │    CORE     │←→│ COMMUNICATOR│  │    SCANNER          │  │
│  └─────────────┘  └─────────────┘  └─────────────────────┘  │
├─────────────────────────────────────────────────────────────┤
│                    MONITORING MODULES                       │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐  │
│  │    FILE     │  │   PROCESS   │  │      NETWORK        │  │
│  │  MONITOR    │  │   MONITOR   │  │      MONITOR        │  │
│  └─────────────┘  └─────────────┘  └─────────────────────┘  │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐  │
│  │  REGISTRY   │  │   MEMORY    │  │      BEHAVIOR       │  │
│  │  MONITOR    │  │   SCANNER   │  │      ANALYZER       │  │
│  └─────────────┘  └─────────────┘  └─────────────────────┘  │
├─────────────────────────────────────────────────────────────┤
│                    STORAGE & RESPONSE                       │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐  │
│  │ QUARANTINE  │  │    EVENT    │  │      THREAT         │  │
│  │  MANAGER    │  │   BUFFER    │  │    RESPONSE         │  │
│  └─────────────┘  └─────────────┘  └─────────────────────┘  │
└─────────────────────────────────────────────────────────────┘
```

---

## 📁 CẤU TRÚC THƯ MỤC DỰ ÁN

```
edr-agent-windows/
├── cmd/
│   └── agent/
│       └── main.go                    # Entry point chính
├── internal/
│   ├── agent/
│   │   ├── agent.go                   # Agent core logic
│   │   ├── lifecycle.go               # Quản lý lifecycle
│   │   └── metrics.go                 # Thu thập metrics
│   ├── config/
│   │   ├── config.go                  # Configuration manager
│   │   ├── validator.go               # Config validation
│   │   └── defaults.go                # Default values
│   ├── communication/
│   │   ├── server_client.go           # HTTP client cho server
│   │   ├── websocket.go               # WebSocket real-time
│   │   ├── heartbeat.go               # Heartbeat manager
│   │   └── retry.go                   # Retry logic
│   ├── monitoring/
│   │   ├── file_monitor.go            # File system monitoring
│   │   ├── process_monitor.go         # Process monitoring
│   │   ├── network_monitor.go         # Network monitoring
│   │   ├── registry_monitor.go        # Registry monitoring
│   │   ├── memory_scanner.go          # Memory scanning
│   │   └── behavior_analyzer.go       # Behavior analysis
│   ├── scanner/
│   │   ├── yara_scanner.go            # YARA scanning engine
│   │   ├── realtime_scanner.go        # Real-time scanning
│   │   └── hash_calculator.go         # File hash calculation
│   ├── yara/
│   │   ├── rules_manager.go           # YARA rules management
│   │   ├── rules_downloader.go        # Download from GitHub
│   │   ├── rules_compiler.go          # Compile rules
│   │   └── rules_updater.go           # Auto-update rules
│   ├── threat/
│   │   ├── detector.go                # Threat detection logic
│   │   ├── classifier.go              # Classify threats
│   │   ├── correlator.go              # Event correlation
│   │   └── mitre_mapper.go            # MITRE ATT&CK mapping
│   ├── response/
│   │   ├── quarantine.go              # File quarantine
│   │   ├── remediation.go             # Auto remediation
│   │   ├── isolation.go               # Network isolation
│   │   └── recovery.go                # System recovery
│   ├── storage/
│   │   ├── event_buffer.go            # Event buffering
│   │   ├── cache_manager.go           # Local caching
│   │   └── persistence.go             # Data persistence
│   ├── service/
│   │   ├── service_windows.go         # Windows service
│   │   ├── installer.go               # Service installer
│   │   └── controller.go              # Service controller
│   ├── utils/
│   │   ├── logger.go                  # Logging system
│   │   ├── crypto.go                  # Cryptographic functions
│   │   ├── system_info.go             # System information
│   │   ├── file_utils.go              # File utilities
│   │   └── network_utils.go           # Network utilities
│   └── models/
│       ├── event.go                   # Event structures
│       ├── alert.go                   # Alert structures
│       ├── agent.go                   # Agent structures
│       └── threat.go                  # Threat structures
├── configs/
│   ├── config.yaml                    # Main configuration
│   ├── rules_config.yaml              # YARA rules config
│   └── monitoring_config.yaml         # Monitoring config
├── scripts/
│   ├── install.ps1                    # PowerShell installer
│   ├── uninstall.ps1                  # PowerShell uninstaller
│   └── update.ps1                     # Update script
├── yara-rules/                        # Local YARA rules cache
├── logs/                              # Log files
├── quarantine/                        # Quarantined files
└── README.md
```

---

## 🔧 CÁC MODULE CHÍNH

### 1. **AGENT CORE** (`internal/agent/`)
**Chức năng:**
- Khởi tạo và quản lý tất cả các module
- Điều phối giữa các component
- Quản lý lifecycle của agent
- Thu thập system metrics

**Tính năng chính:**
- Auto-registration với server bằng MAC address
- Health check và self-healing
- Resource monitoring và optimization
- Graceful shutdown

### 2. **YARA RULES MANAGEMENT** (`internal/yara/`)
**Chức năng:**
- Download YARA rules từ GitHub (https://github.com/Yara-Rules/rules)
- Compile và optimize rules
- Auto-update rules định kỳ
- Rules categorization và filtering

**Workflow:**
```
GitHub Repository → Download ZIP → Extract → Filter → Compile → Load
```

**Tính năng:**
- Smart filtering (loại bỏ test files, broken rules)
- Incremental updates
- Rules validation
- Performance optimization

### 3. **REAL-TIME MONITORING** (`internal/monitoring/`)

#### A. **File System Monitor**
- **Windows API:** ReadDirectoryChangesW
- **Events:** Create, Modify, Delete, Rename
- **Real-time scanning:** Scan ngay khi file được tạo/sửa
- **Smart filtering:** Chỉ scan file types nguy hiểm

#### B. **Process Monitor**
- **Windows API:** WMI (Win32_ProcessStartTrace)
- **Events:** Process start/stop
- **PE Analysis:** Scan executable khi process start
- **Command line monitoring:** Detect suspicious commands

#### C. **Network Monitor**
- **Windows API:** WinPcap/Npcap
- **Events:** TCP/UDP connections
- **DNS monitoring:** Detect malicious domains
- **C&C detection:** Identify C&C communications

#### D. **Registry Monitor**
- **Windows API:** RegNotifyChangeKeyValue
- **Keys:** Autostart locations, security settings
- **Events:** Registry modifications
- **Persistence detection:** Detect malware persistence

#### E. **Memory Scanner**
- **Process memory scanning:** Scan running processes
- **Injection detection:** Detect code injection
- **Shellcode detection:** Find shellcode patterns

#### F. **Behavior Analyzer**
- **Pattern recognition:** Detect malicious behaviors
- **Machine learning:** Anomaly detection
- **Correlation:** Link events together
- **MITRE mapping:** Map to ATT&CK framework

### 4. **THREAT DETECTION ENGINE** (`internal/threat/`)
**Multi-layer Detection:**
- **Signature-based:** YARA rules matching
- **Behavior-based:** Behavioral pattern analysis
- **Heuristic:** Suspicious activity detection
- **ML-based:** Anomaly detection

**Threat Classification:**
- Malware families identification
- APT techniques detection
- Living-off-the-land detection
- Zero-day behavior patterns

### 5. **RESPONSE & REMEDIATION** (`internal/response/`)

#### A. **File Quarantine**
- Automatic file isolation
- Secure quarantine storage
- File restoration capability
- Integrity verification

#### B. **Auto Remediation**
- Kill malicious processes
- Remove registry entries
- Block network connections
- Restore system settings

#### C. **Network Isolation**
- Block suspicious IPs/domains
- Terminate C&C connections
- Network segmentation
- Traffic filtering

### 6. **COMMUNICATION SYSTEM** (`internal/communication/`)

#### A. **Server Communication**
- **REST API:** Synchronous communication
- **WebSocket:** Real-time bidirectional
- **Message Queue:** Buffered messaging
- **Encryption:** TLS + AES encryption

#### B. **Data Types**
- **Events:** File, Process, Network, Registry events
- **Alerts:** High-priority security alerts
- **Metrics:** System performance metrics
- **Logs:** Detailed activity logs

---

## 📊 DATA FLOW & WORKFLOW

### 1. **Initialization Flow**
```
Start Agent → Load Config → Download YARA Rules → 
Compile Rules → Register with Server → 
Start Monitoring Modules → Ready
```

### 2. **Real-time Detection Flow**
```
File Event → YARA Scan → Threat Analysis → 
Alert Generation → Server Notification → 
Response Action → Log Event
```

### 3. **Communication Flow**
```
Agent ←→ Server (REST API)
Agent ←→ Server (WebSocket - Real-time)
Agent → Server (Event Streaming)
Agent ← Server (Task Commands)
```

---

## 🎛️ CONFIGURATION MANAGEMENT

### **config.yaml Structure:**
```yaml
server:
  url: "https://edr-server.company.com"
  api_key: "encrypted_key"
  auth_token: "registration_token"
  websocket_enabled: true
  
agent:
  id: "auto-generated"
  name: "hostname-based"
  heartbeat_interval: 30
  max_memory_usage: "512MB"
  
monitoring:
  file_system:
    enabled: true
    paths: [
      "C:\\Program Files\\",
      "C:\\Windows\\System32\\",
      "C:\\Users\\",
      "C:\\Temp\\"
    ]
    exclude_extensions: [".tmp", ".log", ".bak"]
    real_time_scan: true
    
  processes:
    enabled: true
    scan_executables: true
    monitor_injections: true
    track_network_connections: true
    
  network:
    enabled: true
    monitor_dns: true
    block_malicious_ips: true
    capture_packets: false
    
  registry:
    enabled: true
    monitor_autostart: true
    track_security_settings: true

yara:
  enabled: true
  auto_update: true
  update_interval: "24h"
  rules_source: "https://github.com/Yara-Rules/rules"
  categories: ["malware", "apt", "webshells"]
  
response:
  auto_quarantine: true
  auto_remediation: false
  network_isolation: false
  
logging:
  level: "info"
  file_path: "C:\\Program Files\\EDR-Agent\\logs\\agent.log"
  max_size: "100MB"
  compress: true
```

---

## 🔒 SECURITY FEATURES

### **Data Protection:**
- AES-256 encryption for sensitive data
- Secure API key storage
- Certificate pinning
- Integrity verification

### **Communication Security:**
- TLS 1.3 encryption
- Mutual authentication
- Message signing
- Anti-replay protection

### **Agent Protection:**
- Self-protection mechanisms
- Anti-tampering features
- Process protection
- Configuration protection

---

## 📈 PERFORMANCE OPTIMIZATION

### **Resource Management:**
- Memory usage monitoring
- CPU throttling
- I/O optimization
- Thread pool management

### **Scanning Optimization:**
- File type filtering
- Size-based scanning
- Cache utilization
- Parallel processing

### **Network Optimization:**
- Data compression
- Batch transmission
- Connection pooling
- Retry mechanisms

---

## 🚀 DEPLOYMENT & MANAGEMENT

### **Installation Methods:**
1. **MSI Package:** Windows installer package
2. **PowerShell Script:** Automated installation
3. **Group Policy:** Enterprise deployment
4. **Manual Installation:** Standalone deployment

### **Service Management:**
```powershell
# Install as Windows Service
edr-agent.exe -install

# Start service
edr-agent.exe -start

# Stop service  
edr-agent.exe -stop

# Uninstall service
edr-agent.exe -uninstall

# Check status
edr-agent.exe -status
```

### **Management Commands:**
```powershell
# Update YARA rules
edr-agent.exe -update-rules

# Reset configuration
edr-agent.exe -reset-config

# Force re-registration
edr-agent.exe -re-register

# Generate system report
edr-agent.exe -report
```

---

## 📊 MONITORING & ALERTING

### **Alert Types:**
- **Critical:** Malware detection, APT activity
- **High:** Suspicious behavior, policy violations
- **Medium:** Unusual activities, anomalies
- **Low:** Information events, system changes

### **Event Categories:**
- **File Events:** Create, modify, delete, execute
- **Process Events:** Start, stop, injection, privilege escalation
- **Network Events:** Connections, DNS queries, data transfers
- **Registry Events:** Modifications, privilege changes
- **System Events:** Configuration changes, service modifications

### **Real-time Response:**
- Immediate alert transmission
- Automatic threat response
- Forensic data collection
- Incident documentation

---

## 🔄 MAINTENANCE & UPDATES

### **Auto-Update Features:**
- YARA rules updates (daily)
- Agent binary updates
- Configuration synchronization
- Security patches

### **Health Monitoring:**
- Resource usage tracking
- Performance metrics
- Error rate monitoring
- Availability tracking

### **Maintenance Tasks:**
- Log rotation
- Cache cleanup
- Database optimization
- Configuration backup

---

## 📋 IMPLEMENTATION ROADMAP

### **Phase 1: Core Foundation** (Week 1-2)
- Basic agent structure
- Configuration management
- Server communication
- Windows service implementation

### **Phase 2: YARA Integration** (Week 3-4)  
- YARA rules download and management
- Basic file scanning
- Threat detection engine
- Alert generation

### **Phase 3: Real-time Monitoring** (Week 5-6)
- File system monitoring
- Process monitoring
- Network monitoring
- Registry monitoring

### **Phase 4: Advanced Features** (Week 7-8)
- Memory scanning
- Behavior analysis
- Auto remediation
- Performance optimization

### **Phase 5: Production Ready** (Week 9-10)
- Security hardening
- Performance testing
- Documentation
- Deployment automation

---

## 🎯 KẾT LUẬN

Thiết kế này tạo ra một **EDR Agent Windows hoàn chỉnh** với khả năng:

✅ **Real-time threat detection** bằng YARA rules từ GitHub
✅ **Multi-layer monitoring** (File, Process, Network, Registry, Memory)  
✅ **Intelligent threat response** với auto quarantine và remediation
✅ **High-performance scanning** với optimization và caching
✅ **Enterprise-ready** với Windows Service và deployment tools
✅ **Scalable architecture** cho môi trường doanh nghiệp lớn

**Hệ thống này sẽ cung cấp khả năng bảo vệ endpoint mạnh mẽ, phát hiện và ngăn chặn các mối đe dọa trong thời gian thực, đáp ứng đầy đủ yêu cầu của một giải pháp EDR chuyên nghiệp.**